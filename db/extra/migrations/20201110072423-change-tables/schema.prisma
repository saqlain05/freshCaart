// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @default(autoincrement()) @id
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("user")
  sessions       Session[]
  profile        Profile?
  cart           Cart[]
  orders         Order[]
  topItems       TopSellingItem[]
  verified       Boolean   @default(false)
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Profile {
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  firstName       String   
  lastName        String   
  shopName        String   
  phone           String      
  whatsapp        String      
  address         String   
  city            String   
  pincode         String      
  openTime        String   
  closeTime       String   
  maxOrderAcceptTime String   
  longitude       String?   
  latitude        String?   
  user            User    @relation(fields: [userId], references: [id]) 
  userId          Int 
  @@id([userId])   
}

model Category {
  id        Int       @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    
  product   Product[] 
}

model Product {
  id          Int      @default(autoincrement()) @id
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   
  price       Float    
  imageUrl    String   
  description String   
  minQuantity Int      
  stock       Boolean  
  measureUnit String   
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int  
  cart        Cart[]    
}

model Cart {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Int?    
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  productPrice Float?      
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  @@id([userId, productId])      
}

model Order {
  id           Int           @default(autoincrement()) @id
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  phone        String?        
  address      String?        
  pinCode      String? 
  city         String?       
  user         User          @relation(fields: [userId], references: [id])
  userId       Int           
  orderDetails OrderDetail[] 
  totalPrice   Float?
  payMode      String?
  payStatus    String?       @default("PENDING")       
  orderStatus  String?        @default("NULL")       
}

model OrderDetail {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Float    
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  goodsId   Int
  productPrice Float    
}

model TopSellingItem {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  itemName  String   
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      
}